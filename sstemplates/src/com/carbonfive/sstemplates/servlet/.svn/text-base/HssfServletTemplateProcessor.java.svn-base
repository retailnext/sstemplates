package com.sivoh.hssftemplates.servlet;

import com.sivoh.hssftemplates.tags.*;
import com.sivoh.hssftemplates.*;
import org.apache.commons.logging.*;
import org.apache.poi.hssf.usermodel.*;

import javax.servlet.*;
import javax.servlet.http.*;
import java.io.*;
import java.util.*;

public class HssfServletTemplateProcessor
  extends HssfTemplateProcessor
{
  private static final Log log = LogFactory.getLog(HssfServletTemplateProcessor.class);

  private static Map processorCache = Collections.synchronizedMap(new HashMap());

  public static HssfServletTemplateProcessor getInstance(Collection customTags)
    throws HssfTemplateException
  {
    HssfServletTemplateProcessor processor = (HssfServletTemplateProcessor) processorCache.get(customTags);

    if (processor == null)
    {
      processor = new HssfServletTemplateProcessor(customTags);
      processorCache.put(customTags, processor);
    }

    return processor;
  }

  protected HssfServletTemplateProcessor(Collection customTags)
    throws HssfTemplateException
  {
    super(customTags);
  }

  public HSSFWorkbook process(HttpServletRequest request, ServletContext context, File templateDir, File templateFile)
    throws HssfTemplateException
  {
    HssfWorkbookTag renderTree = retrieveRenderTree(templateFile.getAbsolutePath());
    HssfTemplateContext templateContext = createTemplateContext(request, context, templateDir);

    renderTree.render(templateContext);

    return templateContext.getWorkbook();
  }

  protected HssfTemplateServletContext createTemplateContext(HttpServletRequest request, ServletContext context, File templateDir)
  {
    return new HssfTemplateServletContext(request, context, this, templateDir);
  }
}
